#lang racket/base

(require "simpler-branchy2.rkt")

(define input '(34 35 25 9 32 22 27 30 35 24 15 18 19 6 0 22 34 33 6 31 25 0 32 9 18 22 14 6 12 21 35 22 5 26 22 19 29 12 2 9 30 25 24 17 24 33 1 27 26 0 6 32 17 3 20 11 10 11 30 32 14 33 20 33 26 37 35 28 21 27 21 36 1 7 25 30 0 2 10 14 9 16 30 7 32 5 30 24 34 20 26 1 9 24 15 9 30 14 13 11 19 3 21 5 28 26 32 8 15 11 2 26 34 18 23 5 3 3 17 23 29 9 5 17 2 14 9 12 17 37 2 18 24 36 26 13 18 8 29 4 4 6 24 24 17 34 19 13 4 8 25 17 27 12 20 5 30 19 21 30 31 6 34 16 12 11 3 4 30 0 31 29 10 31 27 2 31 4 13 23 8 18 33 5 2 34 34 19 31 8 10 11 1 25 1 22 2 0 6 19 13 29 14 5 2 16 26 5 18 4 13 27 15 34 20 21 27 27 14 33 18 9 10 16 20 9 19 6 2 22 6 9 3 35 8 17 32 26 4 5 31 36 27 15 20 15 4 24 37 6 21 24 25 17 11 10 14 23 23 6 14 3 32 10 12 15 3 4 0 28 24 4 19 7 3 15 18 21 18 2 36 24 30 7 30 32 5 12 13 23 0 21 19 11 25 36 10 30 31 35 12 19 37 5 27 32 26 4 13 31 7 13 27 18 28 3 32 8 26 28 5 5 25 21 37 18 29 23 18 9 25 22 36 36 16 10 36 14 33 31 33 27 15 26 22 3 13 28 32 3 14 6 5 10 6 14 0 32 37 22 19 25 13 37 3 0 22 32 5 16 1 32 19 20 35 27 26 32 0 29 14 28 15 15 16 9 4 15 34 20 8 30 29 37 33 28 18 10 20 5 24 20 10 31 30 34 24 12 23 21 7 12 5 3 15 17 13 17 28 32 2 4 22 36 23 19 26 21 14 4 18 27 35 20 20 9 5 28 35 7 18 36 26 17 0 5 14 30 33 24 14 7 13 12 1 11 11 29 34 31 2 1 18 26 10 5 23 11 20 17 33 13 30 3 1 21 36 22 28 7 12 4 26 30 10 4 33 16 4 24 21 14 26 31 9 28 21 12 17 24 10 28 9 27 4 29 14 11 26 28 23 6 15 20 6 22 25 21 10 27 5 14 31 1 15 32 12 32 1 20 3 30 2 8 11 4 10 32 11 0 33 22 32 31 24 3 29 10 34 24 26 8 33 30 34 5 0 16 4 17 23 1 6 4 15 28 18 26 7 30 9 32 30 30 37 17 22 11 17 27 13 18 10 12 19 11 26 29 34 36 13 11 15 5 21 28 23 28 23 13 18 3 22 13 34 28 28 3 24 31 27 23 37 24 29 25 29 19 30 29 36 34 31 19 12 18 33 35 13 36 8 26 24 13 2 22 7 7 0 11 37 34 17 8 11 28 21 3 6 20 13 3 3 16 37 3 26 35 17 4 7 2 2 34 16 28 19 27 26 18 13 1 26 8 28 25 10 0 28 1 15 24 13 13 27 27 12 0 24 6 8 21 3 19 11 37 35 8 31 24 24 27 16 25 16 10 26 18 27 24 18 6 0 30 7 26 2 15 8 28 2 0 22 7 30 24 30 27 25 34 31 24 29 1 26 24 0 27 4 0 30 18 32 5 23 24 0 14 11 9 26 35 24 12 29 22 18 12 15 16 27 15 20 2 12 34 27 6 20 27 13 27 23 35 15 24 22 9 1 21 12 36 30 6 1 26 23 8 32 23 32 24 32 22 6 4 31 7 35 22 17 37 6 12 16 5 4 33 36 15 0 35 20 11 21 10 36 19 11 18 23 37 20 35 0 24 26 0 18 12 31 1 34 26 9 27 30 18 21 14 37 25 28 30 37 21 0 26 8 8 33 7 12 35 28 27 31 21 26 13 10 27 13 20 0 9 21 29 34 34 31 11 1 16 37 30 5 29 5 0 3 22 28 4 13 32 5 8 14 8 34 21 4 25 23 37 22 32 36 34 8 37 1 21 24 31 25 26 5 17 30 36 15 24 37 33 26 26 34 23 13 22 37 34 34 23 24 33 29 31 10 24 6 11 9 4 12 29 19 35 15 31 27 32 9 26 13 35 0 18 19 3 11 23 30 23 8 37 29 31 29 10 7 32 33 12 8 7 28 18 1 9 19 11 14 13 21 6 2 25 13 2 29 15 30 0 16 31 8 2 31 31 25 6 19 0 21 26 35 6))

(printf "---- LOOP BEGINS ---- result : ~a\n" (function input))
(for ([i (in-range 15)])
  (time (for ([j (in-range 2000)])
          (function input))))
(printf "---- LOOP ENDS ---- \n")