"""
Auto-generated by bootstrap-rktio-pycket.rkt using rktio.rktl
Modifying by hand is not recommended.


Defines and provides some constants, struct pointer types,
and three list of tuples:

DEFINE_FUNCTION =
  [(rffi-(return)-type, func-name, [(rffi-type arg-name) ...]]

DEFINE_FUNCTION_ERRNO & DEFINE_FUNCTION_ERRNO_STEP =
  [(rffi-err-val, rffi-(return)-type, func-name, [(rffi-type arg-name) ...]

As well as a map of names for struct pointers to rffi and Pycket types.
We use the map to generate pointer types for rffi and Pycket wrappers to
use when passing stuff around.

We use the tuples (in pycket/rktio.py) to auto-generete the
rffi.llexternal calls, as well as the functions exposed to the
Pycket runtime (@expose_with_rffi) to call these.

"""



from pycket import values, values_string
from pycket.rktio.types import *
from rpython.rtyper.lltypesystem import rffi
from pycket.foreign import make_w_pointer_class


# Constants 

RKTIO_LOCK_ERROR = -2
RKTIO_ERROR_CANNOT_FILE_POSITION = 12
RKTIO_ERROR_LTPS_NOT_FOUND = 17
RKTIO_LOG_WARNING = 3
RKTIO_SW_MINIMIZE = 2
RKTIO_FILE_TYPE_DIRECTORY_LINK = 4
RKTIO_FILE_TYPE_ERROR = -1
RKTIO_COPY_STEP_READ_SRC_DATA = 3
RKTIO_LTPS_REMOVE_VNODE = 8
RKTIO_OPEN_TRUNCATE = 1 << 3
RKTIO_LTPS_HANDLE_ZERO = 1
RKTIO_CONVERTER_SUPPORTED = 1 << 0
RKTIO_PATH_CACHE_DIR = 10
RKTIO_ERROR_INIT_FAILED = 16
RKTIO_OPEN_MUST_EXIST = 1 << 5
RKTIO_LOG_INFO = 4
RKTIO_FS_CHANGE_SCALABLE = 1 << 1
RKTIO_SHUTDOWN_READ = 0
RKTIO_SW_MAXIMIZE = 1
RKTIO_ERROR_CONVERT_OTHER = 31
RKTIO_ERROR_LTPS_REMOVED = 18
RKTIO_OPEN_DIR = 1 << 11
RKTIO_SW_SHOWNA = 9
RKTIO_ERROR_CONVERT_NOT_ENOUGH_SPACE = 28
RKTIO_PROCESS_RUNNING = 0
RKTIO_ERROR_UNSUPPORTED = 1
RKTIO_NUM_OS_SIGNALS = 3
RKTIO_PATH_TEMP_DIR = 1
RKTIO_OS_SIGNAL_NONE = -1
RKTIO_READ_ERROR = -2
RKTIO_ERROR_NO_TILDE = 13
RKTIO_ERROR_INVALID_PATH = 2
RKTIO_ERROR_TRY_AGAIN = 23
RKTIO_PROCESS_NO_CLOSE_FDS = 1 << 4
RKTIO_COPY_STEP_WRITE_DEST_METADATA = 6
RKTIO_PROCESS_ERROR = -2
RKTIO_ERROR_IS_A_DIRECTORY = 9
RKTIO_PROCESS_DONE = 1
RKTIO_ERROR_UNKNOWN_USER = 15
RKTIO_POLL_READ = 1 << 0
RKTIO_PROCESS_WINDOWS_CHAIN_TERMINATION = 1 << 3
RKTIO_OPEN_TEXT = 1 << 2
RKTIO_LTPS_HANDLE_NONE = 0
RKTIO_SW_RESTORE = 3
RKTIO_LTPS_CHECK_READ = 3
RKTIO_ERROR_KIND_GAI = 2
RKTIO_LTPS_REMOVE = 5
RKTIO_DEFAULT_DIRECTORY_PERM_BITS = 511
RKTIO_OS_SIGNAL_TERM = 1
RKTIO_SW_SHOWNOACTIVATE = 10
RKTIO_ERROR_KIND_WINDOWS = 1
RKTIO_POSITION_FROM_END = 1
RKTIO_FAMILY_ANY = -1
RKTIO_SW_SHOWMINIMIZED = 7
RKTIO_COPY_STEP_OPEN_SRC = 1
RKTIO_PROCESS_NEW_GROUP = 1 << 0
RKTIO_OPEN_UDP = 1 << 8
RKTIO_ERROR_DOES_NOT_EXIST = 3
RKTIO_SW_SHOWMAXIMIZED = 6
RKTIO_PERMISSION_WRITE = 2
RKTIO_ERROR_SHELL_EXECUTE_FAILED = 27
RKTIO_PERMISSION_READ = 4
RKTIO_PROP_ERROR = -2
RKTIO_LTPS_CHECK_VNODE = 7
RKTIO_OPEN_REGFILE = 1 << 9
RKTIO_PATH_SYS_DIR = 0
RKTIO_PERMISSION_ERROR = -1
RKTIO_ADD_MEMBERSHIP = 0
RKTIO_LOCK_NOT_ACQUIRED = 0
RKTIO_PATH_ADDON_DIR = 4
RKTIO_PATH_INIT_FILE = 9
RKTIO_PROCESS_STDOUT_AS_STDERR = 1 << 1
RKTIO_DROP_MEMBERSHIP = 1
RKTIO_CONVERT_RECASE_UTF16 = 1 << 2
RKTIO_ERROR_KIND_POSIX = 0
RKTIO_ERROR_UNSUPPORTED_TEXT_MODE = 11
RKTIO_ERROR_NO_SUCH_ENVVAR = 26
RKTIO_ERROR_TIME_OUT_OF_RANGE = 25
RKTIO_OPEN_NOT_DIR = 1 << 12
RKTIO_ERROR_CONNECT_TRYING_NEXT = 19
RKTIO_PATH_HOME_DIR = 5
RKTIO_DEFAULT_PERM_BITS = 438
RKTIO_OS_SIGNAL_HUP = 2
RKTIO_SHA224_DIGEST_SIZE = 28
RKTIO_OS_SIGNAL_INT = 0
RKTIO_PATH_PREF_DIR = 2
RKTIO_ERROR_CONVERT_PREMATURE_END = 30
RKTIO_LTPS_CREATE_READ = 1
RKTIO_ERROR_KIND_RACKET = 3
RKTIO_FILE_TYPE_LINK = 3
RKTIO_COPY_STEP_OPEN_DEST = 2
RKTIO_OPEN_OWN = 1 << 14
RKTIO_STDERR = 2
RKTIO_COPY_STEP_UNKNOWN = 0
RKTIO_ERROR_ACCEPT_NOT_READY = 20
RKTIO_SW_SHOWMINNOACTIVE = 8
RKTIO_COPY_STEP_WRITE_DEST_DATA = 4
RKTIO_PATH_DOC_DIR = 7
RKTIO_POLL_READY = 1
RKTIO_SW_HIDE = 0
RKTIO_SHA256_DIGEST_SIZE = 32
RKTIO_OPEN_APPEND = 1 << 4
RKTIO_ERROR_TRY_AGAIN_WITH_IPV4 = 24
RKTIO_ERROR_INFO_TRY_AGAIN = 22
RKTIO_LTPS_CREATE_VNODE = 6
RKTIO_OPEN_REPLACE_PERMS = 1 << 15
RKTIO_OPEN_CAN_EXIST = 1 << 6
RKTIO_ERROR_BAD_PERMISSION = 8
RKTIO_POLL_WRITE = 1 << 1
RKTIO_OPEN_READ = 1 << 0
RKTIO_SW_SHOWDEFAULT = 5
RKTIO_WRITE_ERROR = -2
RKTIO_LOCK_ACQUIRED = 1
RKTIO_POLL_NOT_READY = 0
RKTIO_ERROR_HOST_AND_PORT_BOTH_UNSPECIFIED = 21
RKTIO_FILE_TYPE_FILE = 1
RKTIO_PATH_INIT_DIR = 8
RKTIO_OPEN_INIT = 1 << 13
RKTIO_NO_INHERIT_INPUT = 1 << 0
RKTIO_LOG_FATAL = 1
RKTIO_COPY_STEP_READ_SRC_METADATA = 5
RKTIO_CONVERT_ERROR = -1
RKTIO_PROCESS_NO_INHERIT_FDS = 1 << 5
RKTIO_LOG_DEBUG = 5
RKTIO_ERROR_DLL = 32
RKTIO_OPEN_WRITE = 1 << 1
RKTIO_READ_EOF = -1
RKTIO_PERMISSION_EXEC = 1
RKTIO_PATH_DESK_DIR = 6
RKTIO_FS_CHANGE_LOW_LATENCY = 1 << 2
RKTIO_OPEN_NOT_REGFILE = 1 << 10
RKTIO_PROCESS_WINDOWS_EXACT_CMDLINE = 1 << 2
RKTIO_SW_SHOW = 4
RKTIO_ERROR_NOT_A_LINK = 7
RKTIO_ERROR_EXISTS = 4
RKTIO_LOG_ERROR = 2
RKTIO_POSITION_FROM_START = 0
RKTIO_ERROR_LINK_FAILED = 6
RKTIO_SW_SHOWNORMAL = 11
RKTIO_LTPS_CREATE_WRITE = 2
RKTIO_NO_INHERIT_OUTPUT = 1 << 1
RKTIO_FS_CHANGE_FILE_LEVEL = 1 << 3
RKTIO_FS_CHANGE_NEED_LTPS = 1 << 4
RKTIO_ERROR_NOT_A_DIRECTORY = 10
RKTIO_SHA1_DIGEST_SIZE = 20
RKTIO_STDOUT = 1
RKTIO_FILE_TYPE_DIRECTORY = 2
RKTIO_ERROR_ACCESS_DENIED = 5
RKTIO_POLL_FLUSH = 1 << 1 << 2
RKTIO_STDIN = 0
RKTIO_ERROR_CONVERT_BAD_SEQUENCE = 29
RKTIO_OPEN_SOCKET = 1 << 7
RKTIO_POLL_ERROR = -2
RKTIO_LTPS_CHECK_WRITE = 4
RKTIO_PATH_PREF_FILE = 3
RKTIO_FS_CHANGE_SUPPORTED = 1 << 0
RKTIO_CONVERT_STRCOLL_UTF16 = 1 << 1
RKTIO_LTPS_HANDLE_FREE = 2
RKTIO_ERROR_ILL_FORMED_USER = 14
RKTIO_SHUTDOWN_WRITE = 1


# Struct pointers

DLL_OPEN_PROC_PTR = rffi.COpaquePtr("dll_open_proc")
W_DLL_OPEN_PROC_PTR = make_w_pointer_class("dll_open_proc")

RKTIO_FS_CHANGE_T_PTR = rffi.COpaquePtr("rktio_fs_change_t")
W_RKTIO_FS_CHANGE_T_PTR = make_w_pointer_class("rktio_fs_change_t")

RKTIO_SHA1_CTX_T_PTR = rffi.COpaquePtr("rktio_sha1_ctx_t")
W_RKTIO_SHA1_CTX_T_PTR = make_w_pointer_class("rktio_sha1_ctx_t")

RKTIO_STAT_T_PTR = rffi.COpaquePtr("rktio_stat_t")
W_RKTIO_STAT_T_PTR = make_w_pointer_class("rktio_stat_t")

RKTIO_ADDRINFO_LOOKUP_T_PTR = rffi.COpaquePtr("rktio_addrinfo_lookup_t")
W_RKTIO_ADDRINFO_LOOKUP_T_PTR = make_w_pointer_class("rktio_addrinfo_lookup_t")

RKTIO_ENVVARS_T_PTR = rffi.COpaquePtr("rktio_envvars_t")
W_RKTIO_ENVVARS_T_PTR = make_w_pointer_class("rktio_envvars_t")

RKTIO_LENGTH_AND_ADDRINFO_T_PTR = rffi.COpaquePtr("rktio_length_and_addrinfo_t")
W_RKTIO_LENGTH_AND_ADDRINFO_T_PTR = make_w_pointer_class("rktio_length_and_addrinfo_t")

RKTIO_FD_T_PTR = rffi.COpaquePtr("rktio_fd_t")
W_RKTIO_FD_T_PTR = make_w_pointer_class("rktio_fd_t")

RKTIO_FILE_COPY_T_PTR = rffi.COpaquePtr("rktio_file_copy_t")
W_RKTIO_FILE_COPY_T_PTR = make_w_pointer_class("rktio_file_copy_t")

RKTIO_SIGNAL_HANDLE_T_PTR = rffi.COpaquePtr("rktio_signal_handle_t")
W_RKTIO_SIGNAL_HANDLE_T_PTR = make_w_pointer_class("rktio_signal_handle_t")

RKTIO_CONNECT_T_PTR = rffi.COpaquePtr("rktio_connect_t")
W_RKTIO_CONNECT_T_PTR = make_w_pointer_class("rktio_connect_t")

RKTIO_LTPS_HANDLE_T_PTR = rffi.COpaquePtr("rktio_ltps_handle_t")
W_RKTIO_LTPS_HANDLE_T_PTR = make_w_pointer_class("rktio_ltps_handle_t")

RKTIO_DLL_T_PTR = rffi.COpaquePtr("rktio_dll_t")
W_RKTIO_DLL_T_PTR = make_w_pointer_class("rktio_dll_t")

RKTIO_DATE_T_PTR = rffi.COpaquePtr("rktio_date_t")
W_RKTIO_DATE_T_PTR = make_w_pointer_class("rktio_date_t")

RKTIO_PROCESS_T_PTR = rffi.COpaquePtr("rktio_process_t")
W_RKTIO_PROCESS_T_PTR = make_w_pointer_class("rktio_process_t")

RKTIO_LTPS_T_PTR = rffi.COpaquePtr("rktio_ltps_t")
W_RKTIO_LTPS_T_PTR = make_w_pointer_class("rktio_ltps_t")

RKTIO_SHA2_CTX_T_PTR = rffi.COpaquePtr("rktio_sha2_ctx_t")
W_RKTIO_SHA2_CTX_T_PTR = make_w_pointer_class("rktio_sha2_ctx_t")

RKTIO_T_PTR = rffi.COpaquePtr("rktio_t")
W_RKTIO_T_PTR = make_w_pointer_class("rktio_t")

RKTIO_IDENTITY_T_PTR = rffi.COpaquePtr("rktio_identity_t")
W_RKTIO_IDENTITY_T_PTR = make_w_pointer_class("rktio_identity_t")

RKTIO_POLL_SET_T_PTR = rffi.COpaquePtr("rktio_poll_set_t")
W_RKTIO_POLL_SET_T_PTR = make_w_pointer_class("rktio_poll_set_t")

RKTIO_CONVERTER_T_PTR = rffi.COpaquePtr("rktio_converter_t")
W_RKTIO_CONVERTER_T_PTR = make_w_pointer_class("rktio_converter_t")

RKTIO_CONVERT_RESULT_T_PTR = rffi.COpaquePtr("rktio_convert_result_t")
W_RKTIO_CONVERT_RESULT_T_PTR = make_w_pointer_class("rktio_convert_result_t")

RKTIO_FD_TRANSFER_T_PTR = rffi.COpaquePtr("rktio_fd_transfer_t")
W_RKTIO_FD_TRANSFER_T_PTR = make_w_pointer_class("rktio_fd_transfer_t")

RKTIO_STATUS_T_PTR = rffi.COpaquePtr("rktio_status_t")
W_RKTIO_STATUS_T_PTR = make_w_pointer_class("rktio_status_t")

DLL_CLOSE_PROC_PTR = rffi.COpaquePtr("dll_close_proc")
W_DLL_CLOSE_PROC_PTR = make_w_pointer_class("dll_close_proc")

RKTIO_LISTENER_T_PTR = rffi.COpaquePtr("rktio_listener_t")
W_RKTIO_LISTENER_T_PTR = make_w_pointer_class("rktio_listener_t")

RKTIO_ADDRINFO_T_PTR = rffi.COpaquePtr("rktio_addrinfo_t")
W_RKTIO_ADDRINFO_T_PTR = make_w_pointer_class("rktio_addrinfo_t")

RKTIO_PROCESS_RESULT_T_PTR = rffi.COpaquePtr("rktio_process_result_t")
W_RKTIO_PROCESS_RESULT_T_PTR = make_w_pointer_class("rktio_process_result_t")

DLL_FIND_OBJECT_PROC_PTR = rffi.COpaquePtr("dll_find_object_proc")
W_DLL_FIND_OBJECT_PROC_PTR = make_w_pointer_class("dll_find_object_proc")

RKTIO_DIRECTORY_LIST_T_PTR = rffi.COpaquePtr("rktio_directory_list_t")
W_RKTIO_DIRECTORY_LIST_T_PTR = make_w_pointer_class("rktio_directory_list_t")


DEFINE_FUNCTION = [

    ((CCHARP, values_string.W_String), "rktio_get_error_string", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "kind"),(INT, values.W_Fixnum, "errid")]),
    ((CCHARP, values_string.W_String), "rktio_get_last_error_string", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_remap_last_error", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_set_last_error_step", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "step")]),
    ((VOID, values.w_void), "rktio_set_last_error", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "kind"),(INT, values.W_Fixnum, "errid")]),
    ((INT, values.W_Fixnum), "rktio_get_last_error_step", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((INT, values.W_Fixnum), "rktio_get_last_error", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((INT, values.W_Fixnum), "rktio_get_last_error_kind", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_set_dll_procs", [(DLL_OPEN_PROC_PTR, W_DLL_OPEN_PROC_PTR, "dll_open"),(DLL_FIND_OBJECT_PROC_PTR, W_DLL_FIND_OBJECT_PROC_PTR, "dll_find_object"),(DLL_CLOSE_PROC_PTR, W_DLL_CLOSE_PROC_PTR, "dll_close")]),
    ((VOID, values.w_void), "rktio_sha2_final", [(RKTIO_SHA2_CTX_T_PTR, W_RKTIO_SHA2_CTX_T_PTR, "ctx"),(UNSIGNED_8, values.W_Fixnum, "digest")]),
    ((VOID, values.w_void), "rktio_sha2_update", [(RKTIO_SHA2_CTX_T_PTR, W_RKTIO_SHA2_CTX_T_PTR, "ctx"),(UNSIGNED_8, values.W_Fixnum, "data"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    ((VOID, values.w_void), "rktio_sha2_init", [(RKTIO_SHA2_CTX_T_PTR, W_RKTIO_SHA2_CTX_T_PTR, "ctx"),(RKTIO_BOOL_T, values.W_Fixnum, "is224")]),
    ((VOID, values.w_void), "rktio_sha1_final", [(RKTIO_SHA1_CTX_T_PTR, W_RKTIO_SHA1_CTX_T_PTR, "context"),(UNSIGNED_8, values.W_Fixnum, "digest")]),
    ((VOID, values.w_void), "rktio_sha1_update", [(RKTIO_SHA1_CTX_T_PTR, W_RKTIO_SHA1_CTX_T_PTR, "context"),(UNSIGNED_8, values.W_Fixnum, "data"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    ((VOID, values.w_void), "rktio_sha1_init", [(RKTIO_SHA1_CTX_T_PTR, W_RKTIO_SHA1_CTX_T_PTR, "context")]),
    ((VOID, values.w_void), "rktio_pop_c_numeric_locale", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(VOID, values.w_void, "prev")]),
    ((VOID, values.w_void), "rktio_push_c_numeric_locale", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_set_default_locale", [(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    ((VOID, values.w_void), "rktio_set_locale", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    ((INT, values.W_Fixnum), "rktio_strcoll_utf16", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CHAR16_T, values.W_Fixnum, "s1"),(INTPTR_T, values.W_Fixnum, "l1"),(RKTIO_CHAR16_T, values.W_Fixnum, "s2"),(INTPTR_T, values.W_Fixnum, "l2"),(RKTIO_BOOL_T, values.W_Fixnum, "cvt_case")]),
    ((INT, values.W_Fixnum), "rktio_locale_strcoll", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "s1"),(RKTIO_CONST_STRING_T, values_string.W_String, "s2")]),
    ((RKTIO_CHAR16_T, values.W_Fixnum), "rktio_recase_utf16", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_BOOL_T, values.W_Fixnum, "to_up"),(RKTIO_CHAR16_T, values.W_Fixnum, "s1"),(INTPTR_T, values.W_Fixnum, "len"),(INTPTR_T, values.W_Fixnum, "olen")]),
    ((CCHARP, values_string.W_String), "rktio_locale_recase", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_BOOL_T, values.W_Fixnum, "to_up"),(RKTIO_CONST_STRING_T, values_string.W_String, "in")]),
    ((VOID, values.w_void), "rktio_convert_reset", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONVERTER_T_PTR, W_RKTIO_CONVERTER_T_PTR, "cvt")]),
    ((VOID, values.w_void), "rktio_converter_close", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONVERTER_T_PTR, W_RKTIO_CONVERTER_T_PTR, "cvt")]),
    ((INT, values.W_Fixnum), "rktio_convert_properties", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((INT, values.W_Fixnum), "rktio_processor_count", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((CCHARP, values_string.W_String), "rktio_wide_path_to_path", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CHAR16_T, values.W_Fixnum, "wp")]),
    ((RKTIO_TIMESTAMP_T, values.W_Fixnum), "rktio_get_seconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((UINTPTR_T, values.W_Fixnum), "rktio_get_process_children_milliseconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((UINTPTR_T, values.W_Fixnum), "rktio_get_process_milliseconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((DOUBLE, values.W_Fixnum), "rktio_get_inexact_monotonic_milliseconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((DOUBLE, values.W_Fixnum), "rktio_get_inexact_milliseconds", []),
    ((UINTPTR_T, values.W_Fixnum), "rktio_get_milliseconds", []),
    ((VOID, values.w_void), "rktio_will_modify_os_signal_handler", [(INT, values.W_Fixnum, "sig_id")]),
    ((INT, values.W_Fixnum), "rktio_poll_os_signal", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_install_os_signal_handler", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_flush_signals_received", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_wait_until_signal_received", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_signal_received", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_signal_received_at", [(RKTIO_SIGNAL_HANDLE_T_PTR, W_RKTIO_SIGNAL_HANDLE_T_PTR, "h")]),
    ((RKTIO_SIGNAL_HANDLE_T_PTR, W_RKTIO_SIGNAL_HANDLE_T_PTR), "rktio_get_signal_handle", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((CCHARP, values_string.W_String), "rktio_uname", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_copy_file_stop", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR, "fc")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_copy_file_is_done", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR, "fc")]),
    ((VOID, values.w_void), "rktio_directory_list_stop", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_DIRECTORY_LIST_T_PTR, W_RKTIO_DIRECTORY_LIST_T_PTR, "dl")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_is_regular_file", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_link_exists", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_directory_exists", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "dirname")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_file_exists", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    ((VOID, values.w_void), "rktio_end_sleep", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_sleep", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(FLOAT, values.W_Flonum, "nsecs"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt")]),
    ((VOID, values.w_void), "rktio_ltps_handle_set_auto", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_HANDLE_T_PTR, W_RKTIO_LTPS_HANDLE_T_PTR, "lth"),(INT, values.W_Fixnum, "auto_mode")]),
    ((VOID, values.w_void), "rktio_ltps_remove_all", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt")]),
    ((VOID, values.w_void), "rktio_ltps_handle_get_data", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_HANDLE_T_PTR, W_RKTIO_LTPS_HANDLE_T_PTR, "h")]),
    ((VOID, values.w_void), "rktio_ltps_handle_set_data", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_HANDLE_T_PTR, W_RKTIO_LTPS_HANDLE_T_PTR, "h"),(VOID, values.w_void, "data")]),
    ((VOID, values.w_void), "rktio_ltps_close", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt")]),
    ((VOID, values.w_void), "rkio_reset_sleep_backoff", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_poll_set_add_eventmask", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds"),(INT, values.W_Fixnum, "mask")]),
    ((VOID, values.w_void), "rktio_poll_set_add_handle", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INTPTR_T, values.W_Fixnum, "h"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds"),(INT, values.W_Fixnum, "repost")]),
    ((VOID, values.w_void), "rktio_poll_set_add_nosleep", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add_fs_change", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FS_CHANGE_T_PTR, W_RKTIO_FS_CHANGE_T_PTR, "fc"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add_process", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add_addrinfo_lookup", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_LOOKUP_T_PTR, W_RKTIO_ADDRINFO_LOOKUP_T_PTR, "lookup"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add_connect", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR, "conn"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add_accept", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR, "listener"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_poll_add", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds"),(INT, values.W_Fixnum, "modes")]),
    ((VOID, values.w_void), "rktio_poll_set_forget", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds")]),
    ((VOID, values.w_void), "rktio_fs_change_forget", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FS_CHANGE_T_PTR, W_RKTIO_FS_CHANGE_T_PTR, "fc")]),
    ((INT, values.W_Fixnum), "rktio_fs_change_properties", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_reap_processes", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_process_forget", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    ((INT, values.W_Fixnum), "rktio_process_pid", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    ((INT, values.W_Fixnum), "rktio_process_allowed_flags", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((INTPTR_T, values.W_Fixnum), "rktio_envvars_count", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars")]),
    ((VOID, values.w_void), "rktio_envvars_set", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars"),(RKTIO_CONST_STRING_T, values_string.W_String, "name"),(RKTIO_CONST_STRING_T, values_string.W_String, "value")]),
    ((VOID, values.w_void), "rktio_envvars_free", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_are_envvar_names_case_insensitive", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_is_ok_envvar_name", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    ((VOID, values.w_void), "rktio_connect_stop", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR, "conn")]),
    ((VOID, values.w_void), "rktio_listen_stop", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR, "l")]),
    ((VOID, values.w_void), "rktio_addrinfo_free", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "a")]),
    ((VOID, values.w_void), "rktio_addrinfo_lookup_stop", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_LOOKUP_T_PTR, W_RKTIO_ADDRINFO_LOOKUP_T_PTR, "lookup")]),
    ((INT, values.W_Fixnum), "rktio_get_ipv4_family", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((VOID, values.w_void), "rktio_fd_close_transfer", [(RKTIO_FD_TRANSFER_T_PTR, W_RKTIO_FD_TRANSFER_T_PTR, "rfdt")]),
    ((RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_fd_attach", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_TRANSFER_T_PTR, W_RKTIO_FD_TRANSFER_T_PTR, "rfdt")]),
    ((RKTIO_FD_TRANSFER_T_PTR, W_RKTIO_FD_TRANSFER_T_PTR), "rktio_fd_detach", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((INTPTR_T, values.W_Fixnum), "rktio_buffered_byte_count", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    ((VOID, values.w_void), "rktio_create_console", []),
    ((VOID, values.w_void), "rktio_forget", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    ((VOID, values.w_void), "rktio_close_noerr", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    ((INT, values.W_Fixnum), "rktio_fd_modes", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_pending_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_text_converted", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_terminal", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_udp", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_socket", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_directory", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((RKTIO_BOOL_T, values.W_Fixnum), "rktio_fd_is_regular_file", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((INTPTR_T, values.W_Fixnum), "rktio_fd_system_fd", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    ((VOID, values.w_void), "rktio_set_dll_path", [(RKTIO_CHAR16_T, values.W_Fixnum, "p")]),
    ((VOID, values.w_void), "rktio_free", [(VOID, values.w_void, "p")]),
    ((VOID, values.w_void), "rktio_destroy", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    ((RKTIO_T_PTR, W_RKTIO_T_PTR), "rktio_init", [])
]

DEFINE_FUNCTION_ERRNO = [

    (NULL, (CCHARP, values_string.W_String), "rktio_dll_get_error", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_dll_close", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_DLL_T_PTR, W_RKTIO_DLL_T_PTR, "dll")]),
    (NULL, (VOID, values.w_void), "rktio_dll_find_object", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_DLL_T_PTR, W_RKTIO_DLL_T_PTR, "dll"),(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    (NULL, (RKTIO_DLL_T_PTR, W_RKTIO_DLL_T_PTR), "rktio_dll_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "name"),(RKTIO_BOOL_T, values.W_Fixnum, "as_global")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_system_language_country", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_locale_encoding", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (NULL, (RKTIO_CONVERT_RESULT_T_PTR, W_RKTIO_CONVERT_RESULT_T_PTR), "rktio_convert_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONVERTER_T_PTR, W_RKTIO_CONVERTER_T_PTR, "cvt"),(CCHARP, values_string.W_String, "in"),(INTPTR_T, values.W_Fixnum, "in_start"),(INTPTR_T, values.W_Fixnum, "in_end"),(CCHARP, values_string.W_String, "out"),(INTPTR_T, values.W_Fixnum, "out_start"),(INTPTR_T, values.W_Fixnum, "out_end")]),
    (RKTIO_CONVERT_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_convert", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONVERTER_T_PTR, W_RKTIO_CONVERTER_T_PTR, "cvt"),(CCHARPP, values_string.W_String, "in"),(INTPTR_T, values.W_Fixnum, "in_left"),(CCHARPP, values_string.W_String, "out"),(INTPTR_T, values.W_Fixnum, "out_left")]),
    (NULL, (RKTIO_CONVERTER_T_PTR, W_RKTIO_CONVERTER_T_PTR), "rktio_converter_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "to_enc"),(RKTIO_CONST_STRING_T, values_string.W_String, "from_enc")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_syslog", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "level"),(RKTIO_CONST_STRING_T, values_string.W_String, "name"),(RKTIO_CONST_STRING_T, values_string.W_String, "msg"),(RKTIO_CONST_STRING_T, values_string.W_String, "exec_name")]),
    (NULL, (RKTIO_CHAR16_T, values.W_Fixnum), "rktio_path_to_wide_path", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "p")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_shell_execute", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "verb"),(RKTIO_CONST_STRING_T, values_string.W_String, "target"),(RKTIO_CONST_STRING_T, values_string.W_String, "arg"),(RKTIO_CONST_STRING_T, values_string.W_String, "dir"),(INT, values.W_Fixnum, "show_mode")]),
    (NULL, (RKTIO_DATE_T_PTR, W_RKTIO_DATE_T_PTR), "rktio_seconds_to_date", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_TIMESTAMP_T, values.W_Fixnum, "seconds"),(INT, values.W_Fixnum, "nanoseconds"),(INT, values.W_Fixnum, "get_gmt")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_expand_user_tilde", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_system_path", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "which")]),
    (NULL, (CCHARPP, values_string.W_String), "rktio_filesystem_roots", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_directory_list_step", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_DIRECTORY_LIST_T_PTR, W_RKTIO_DIRECTORY_LIST_T_PTR, "dl")]),
    (NULL, (RKTIO_DIRECTORY_LIST_T_PTR, W_RKTIO_DIRECTORY_LIST_T_PTR), "rktio_directory_list_start", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "dirname")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_set_file_or_directory_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename"),(INT, values.W_Fixnum, "new_bits")]),
    (RKTIO_PERMISSION_ERROR, (INT, values.W_Fixnum), "rktio_get_file_or_directory_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename"),(RKTIO_BOOL_T, values.W_Fixnum, "all_bits")]),
    (NULL, (RKTIO_IDENTITY_T_PTR, W_RKTIO_IDENTITY_T_PTR), "rktio_path_identity", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "path"),(RKTIO_BOOL_T, values.W_Fixnum, "follow_links")]),
    (NULL, (RKTIO_IDENTITY_T_PTR, W_RKTIO_IDENTITY_T_PTR), "rktio_fd_identity", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    (NULL, (RKTIO_STAT_T_PTR, W_RKTIO_STAT_T_PTR), "rktio_fd_stat", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    (NULL, (RKTIO_STAT_T_PTR, W_RKTIO_STAT_T_PTR), "rktio_file_or_directory_stat", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "path"),(RKTIO_BOOL_T, values.W_Fixnum, "follow_links")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_set_file_modify_seconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "file"),(RKTIO_TIMESTAMP_T, values.W_Fixnum, "secs")]),
    (NULL, (RKTIO_TIMESTAMP_T, values.W_Fixnum), "rktio_get_file_modify_seconds", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "file")]),
    (NULL, (RKTIO_FILESIZE_T, values.W_Fixnum), "rktio_file_size", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_make_link", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(RKTIO_CONST_STRING_T, values_string.W_String, "dest"),(RKTIO_BOOL_T, values.W_Fixnum, "dest_is_directory")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_readlink", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "fullfilename")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_delete_directory", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename"),(RKTIO_CONST_STRING_T, values_string.W_String, "current_directory"),(RKTIO_BOOL_T, values.W_Fixnum, "enable_write_on_fail")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_make_directory_with_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename"),(INT, values.W_Fixnum, "perm_bits")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_make_directory", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_set_current_directory", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "path")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_get_current_directory", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_rename_file", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "dest"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(RKTIO_BOOL_T, values.W_Fixnum, "exists_ok")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_delete_file", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "fn"),(RKTIO_BOOL_T, values.W_Fixnum, "enable_write_on_fail")]),
    (RKTIO_FILE_TYPE_ERROR, (INT, values.W_Fixnum), "rktio_file_type", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "filename")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_start_sleep", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(FLOAT, values.W_Flonum, "nsecs"),(RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR, "fds"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt"),(INT, values.W_Fixnum, "woke_fd")]),
    (NULL, (RKTIO_LTPS_HANDLE_T_PTR, W_RKTIO_LTPS_HANDLE_T_PTR), "rktio_ltps_get_signaled_handle", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_ltps_poll", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt")]),
    (NULL, (RKTIO_LTPS_HANDLE_T_PTR, W_RKTIO_LTPS_HANDLE_T_PTR), "rktio_ltps_add", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "lt"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(INT, values.W_Fixnum, "mode")]),
    (NULL, (RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR), "rktio_ltps_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (NULL, (RKTIO_POLL_SET_T_PTR, W_RKTIO_POLL_SET_T_PTR), "rktio_make_poll_set", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_fs_change_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FS_CHANGE_T_PTR, W_RKTIO_FS_CHANGE_T_PTR, "fc")]),
    (NULL, (RKTIO_FS_CHANGE_T_PTR, W_RKTIO_FS_CHANGE_T_PTR), "rktio_fs_change", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "path"),(RKTIO_LTPS_T_PTR, W_RKTIO_LTPS_T_PTR, "ltps")]),
    (NULL, (RKTIO_STATUS_T_PTR, W_RKTIO_STATUS_T_PTR), "rktio_process_status", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    (RKTIO_PROCESS_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_process_done", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_process_interrupt", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_process_kill", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "sp")]),
    (NULL, (RKTIO_PROCESS_RESULT_T_PTR, W_RKTIO_PROCESS_RESULT_T_PTR), "rktio_process", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "command"),(INT, values.W_Fixnum, "argc"),(RKTIO_CONST_STRING_T, values_string.W_String, "argv"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "stdout_fd"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "stdin_fd"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "stderr_fd"),(RKTIO_PROCESS_T_PTR, W_RKTIO_PROCESS_T_PTR, "group_proc"),(RKTIO_CONST_STRING_T, values_string.W_String, "current_directory"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars"),(INT, values.W_Fixnum, "flags")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_envvars_value_ref", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars"),(INTPTR_T, values.W_Fixnum, "i")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_envvars_name_ref", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars"),(INTPTR_T, values.W_Fixnum, "i")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_envvars_get", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars"),(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    (NULL, (RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR), "rktio_envvars_copy", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR, "envvars")]),
    (NULL, (RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR), "rktio_empty_envvars", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (NULL, (RKTIO_ENVVARS_T_PTR, W_RKTIO_ENVVARS_T_PTR), "rktio_envvars", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_setenv", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "name"),(RKTIO_CONST_STRING_T, values_string.W_String, "val")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_getenv", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "name")]),
    (NULL, (CCHARPP, values_string.W_String), "rktio_listener_address", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR, "lnr")]),
    (NULL, (CCHARPP, values_string.W_String), "rktio_socket_peer_address", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (NULL, (CCHARPP, values_string.W_String), "rktio_socket_address", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_change_multicast_group", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "group_addr"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "intf_addr"),(INT, values.W_Fixnum, "action")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_set_multicast_interface", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr")]),
    (NULL, (CCHARP, values_string.W_String), "rktio_udp_multicast_interface", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_set_multicast_ttl", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(INT, values.W_Fixnum, "ttl_val")]),
    (RKTIO_PROP_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_udp_get_multicast_ttl", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_set_multicast_loopback", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_BOOL_T, values.W_Fixnum, "on")]),
    (RKTIO_PROP_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_udp_get_multicast_loopback", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (RKTIO_PROP_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_udp_get_ttl", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_set_ttl", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(INT, values.W_Fixnum, "ttl_val")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_set_receive_buffer_size", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(INT, values.W_Fixnum, "size")]),
    (NULL, (RKTIO_LENGTH_AND_ADDRINFO_T_PTR, W_RKTIO_LENGTH_AND_ADDRINFO_T_PTR), "rktio_udp_recvfrom_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    (NULL, (RKTIO_LENGTH_AND_ADDRINFO_T_PTR, W_RKTIO_LENGTH_AND_ADDRINFO_T_PTR), "rktio_udp_recvfrom", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "len")]),
    (RKTIO_WRITE_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_udp_sendto_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    (RKTIO_WRITE_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_udp_sendto", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "len")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_connect", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_bind", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr"),(RKTIO_BOOL_T, values.W_Fixnum, "reuse")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_udp_disconnect", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_udp_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "addr"),(INT, values.W_Fixnum, "family")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_tcp_nodelay", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_BOOL_T, values.W_Fixnum, "enable")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_socket_shutdown", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(INT, values.W_Fixnum, "mode")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_connect_trying", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR, "conn")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_connect_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR, "conn")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_connect_finish", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR, "conn")]),
    (NULL, (RKTIO_CONNECT_T_PTR, W_RKTIO_CONNECT_T_PTR), "rktio_start_connect", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "remote"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "local")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_accept", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR, "listener")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_accept_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR, "listener")]),
    (NULL, (RKTIO_LISTENER_T_PTR, W_RKTIO_LISTENER_T_PTR), "rktio_listen", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR, "local"),(INT, values.W_Fixnum, "backlog"),(RKTIO_BOOL_T, values.W_Fixnum, "reuse")]),
    (NULL, (RKTIO_ADDRINFO_T_PTR, W_RKTIO_ADDRINFO_T_PTR), "rktio_addrinfo_lookup_get", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_LOOKUP_T_PTR, W_RKTIO_ADDRINFO_LOOKUP_T_PTR, "lookup")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_addrinfo_lookup_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_ADDRINFO_LOOKUP_T_PTR, W_RKTIO_ADDRINFO_LOOKUP_T_PTR, "lookup")]),
    (NULL, (RKTIO_ADDRINFO_LOOKUP_T_PTR, W_RKTIO_ADDRINFO_LOOKUP_T_PTR), "rktio_start_addrinfo_lookup", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "hostname"),(INT, values.W_Fixnum, "portno"),(INT, values.W_Fixnum, "family"),(RKTIO_BOOL_T, values.W_Fixnum, "passive"),(RKTIO_BOOL_T, values.W_Fixnum, "tcp")]),
    (NULL, (ARR_PTR(RKTIO_FD_T_PTR), W_ARR_PTR(RKTIO_FD_T_PTR)), "rktio_make_pipe", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "flags")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_set_file_size", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_FILESIZE_T, values.W_Fixnum, "sz")]),
    (NULL, (RKTIO_FILESIZE_T, values.W_Fixnum), "rktio_get_file_position", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_set_file_position", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_FILESIZE_T, values.W_Fixnum, "pos"),(INT, values.W_Fixnum, "whence")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_file_unlock", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (RKTIO_LOCK_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_file_lock_try", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd"),(RKTIO_BOOL_T, values.W_Fixnum, "excl")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_write_flushed", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_write_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (RKTIO_POLL_ERROR, (RKTIO_TRI_T, values.W_Fixnum), "rktio_poll_read_ready", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (RKTIO_READ_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_read_converted_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "len"),(CCHARP, values_string.W_String, "is_converted"),(INTPTR_T, values.W_Fixnum, "converted_start")]),
    (RKTIO_WRITE_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_write_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    (RKTIO_READ_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_read_in", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "start"),(INTPTR_T, values.W_Fixnum, "end")]),
    (RKTIO_READ_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_read_converted", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "len"),(CCHARP, values_string.W_String, "is_converted")]),
    (RKTIO_WRITE_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_write", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "len")]),
    (RKTIO_READ_ERROR, (INTPTR_T, values.W_Fixnum), "rktio_read", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd"),(CCHARP, values_string.W_String, "buffer"),(INTPTR_T, values.W_Fixnum, "len")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_std_fd", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INT, values.W_Fixnum, "which")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_dup", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "rfd")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_close", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR, "fd")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_open_with_create_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(INT, values.W_Fixnum, "modes"),(INT, values.W_Fixnum, "perm_bits")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_open", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(INT, values.W_Fixnum, "modes")]),
    (NULL, (RKTIO_FD_T_PTR, W_RKTIO_FD_T_PTR), "rktio_system_fd", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(INTPTR_T, values.W_Fixnum, "system_fd"),(INT, values.W_Fixnum, "modes")]),
    (NULL, (RKTIO_CHAR16_T, values.W_Fixnum), "rktio_get_dll_path", [(RKTIO_CHAR16_T, values.W_Fixnum, "p")])
]

DEFINE_FUNCTION_ERRNO_STEP = [

    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_copy_file_finish_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR, "fc")]),
    (W_FALSE, (RKTIO_OK_T, values.W_Fixnum), "rktio_copy_file_step", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR, "fc")]),
    (NULL, (RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR), "rktio_copy_file_start_permissions", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "dest"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(RKTIO_BOOL_T, values.W_Fixnum, "exists_ok"),(RKTIO_BOOL_T, values.W_Fixnum, "use_perm_bits"),(INT, values.W_Fixnum, "perm_bits"),(RKTIO_BOOL_T, values.W_Fixnum, "override_create_perms")]),
    (NULL, (RKTIO_FILE_COPY_T_PTR, W_RKTIO_FILE_COPY_T_PTR), "rktio_copy_file_start", [(RKTIO_T_PTR, W_RKTIO_T_PTR, "rktio"),(RKTIO_CONST_STRING_T, values_string.W_String, "dest"),(RKTIO_CONST_STRING_T, values_string.W_String, "src"),(RKTIO_BOOL_T, values.W_Fixnum, "exists_ok")])
]
